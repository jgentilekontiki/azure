{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "West Europe",
        "East Asia",
        "Southeast Asia"
      ],
      "metadata": {
        "description": "The region to deploy the resources into"
      }
    },
    "publicDnsName1": {
      "type": "string",
      "metadata": {
        "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
      }
    },
    "storageAccount": {
      "type": "string",
      "metadata": {
        "description": "Name of the Storage Account. This has to be a uinique name, up to 24 chars, all lowercase."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "jeremy",
      "metadata": {
        "description": "The name of the VM"
      }
    },
    
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "cloudguy",
      "metadata": {
        "description": "The name of the administrator of the new VM. Exclusion list: 'admin','administrator'"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM"
      }
    },
    "rdpPort": {
      "type": "int",
      "defaultValue": 50001,
      "metadata": {
        "description": "Public port number for RDP"
      }
    }
  },
  "variables": {
    "vnetAddressRange": "10.0.0.0/16",
    "subnetAddressRange": "10.0.0.0/24",
    "subnetName": "Subnet",
    "subnet-id": "[concat(resourceId('Microsoft.Network/virtualNetworks','VNET'),'/subnets/',variables('subnetName'))]",
    "pubIp": "[concat('pubIp',parameters('publicDnsName'),'')]",
    },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pubIp')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicDnsName')]"
        }
      }
    },
    
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "VNET",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressRange')]"
          ]
        },
        "subnets": [
          {
            "name": "Subnet",
            "properties": {
              "addressPrefix": "[variables('subnetAddressRange')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "loadBalancer1",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('pubIp'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LBFE",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubIp'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBAP"
          }
        ],
        "inboundNatRules": [
          {
            "name": "rdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer1'),'/frontendIPConfigurations/LBFE')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('rdpPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "loadBalancer2",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('pubIp2'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LBFE",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubIp2'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBAP"
          }
        ],
        "inboundNatRules": [
          {
            "name": "rdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer2'),'/frontendIPConfigurations/LBFE')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('rdpPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "loadBalancer3",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('pubIp3'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LBFE",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubIp3'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBAP"
          }
        ],
        "inboundNatRules": [
          {
            "name": "rdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer3'),'/frontendIPConfigurations/LBFE')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('rdpPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName1'),'-nif')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "Microsoft.Network/virtualNetworks/VNET",
        "Microsoft.Network/loadBalancers/loadBalancer1"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer1'),'/backendAddressPools/LBBAP')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer1'),'/inboundNatRules/rdp')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName2'),'-nif')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "Microsoft.Network/virtualNetworks/VNET",
        "Microsoft.Network/loadBalancers/loadBalancer2"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer2'),'/backendAddressPools/LBBAP')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer2'),'/inboundNatRules/rdp')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName3'),'-nif')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "Microsoft.Network/virtualNetworks/VNET",
        "Microsoft.Network/loadBalancers/loadBalancer3"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer3'),'/backendAddressPools/LBBAP')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer3'),'/inboundNatRules/rdp')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName1')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName1'),'-nif')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "osProfile": {
          "computername": "[parameters('vmName1')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "osType": "Windows",
            "name": "osdisk",
            "image": {
              "uri": "https://testflightdynamicstorage.blob.core.windows.net/system/Microsoft.Compute/Images/templates/TFDynamicBaseVMImage-osDisk.d1009251-508c-4d6f-85a4-3835e56f1199.vhd"
            },
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccount'),'.blob.core.windows.net/vhds/',parameters('vmName1'),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName1'),'-nif'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName2')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName2'),'-nif')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "osProfile": {
          "computername": "[parameters('vmName2')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "osType": "Windows",
            "name": "osdisk",
            "image": {
              "uri": "https://testflightdynamicstorage.blob.core.windows.net/system/Microsoft.Compute/Images/templates/TFDynamicBaseVMImage-osDisk.d1009251-508c-4d6f-85a4-3835e56f1199.vhd"
            },
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccount'),'.blob.core.windows.net/vhds/',parameters('vmName2'),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [ 
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName2'),'-nif'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName3')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName3'),'-nif')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "osProfile": {
          "computername": "[parameters('vmName3')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "osType": "Windows",
            "name": "osdisk",
            "image": {
              "uri": "https://testflightdynamicstorage.blob.core.windows.net/system/Microsoft.Compute/Images/templates/TFDynamicBaseVMImage-osDisk.d1009251-508c-4d6f-85a4-3835e56f1199.vhd"
            },
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccount'),'.blob.core.windows.net/vhds/',parameters('vmName3'),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName3'),'-nif'))]"
            }
          ]
        }
      }
    }
  ]
}
